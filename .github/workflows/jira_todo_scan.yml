# Der Name des Workflows, den du in GitHub Actions siehst
name: "Scan for TODOs and create Jira tickets"

# Der Workflow wird bei jedem Push in den 'main'-Branch ausgelöst
on:
  push:
    branches:
      - main
      - master
    workflow_dispatch:

# Die Jobs, die ausgeführt werden sollen
jobs:
  create_jira_tickets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Scan for TODO comments
        id: find_todos
        run: |
          # Findet alle TODO-Kommentare in .js- und .ts-Dateien
          # und formatiert sie. Du kannst die Dateitypen anpassen.
          TODOS=$(grep -r -E 'TODO:' --include=\*.{kt,kts} . | sed 's/ /%20/g')
          # Entfernt die Pfade, sodass nur der TODO-Text übrig bleibt
          TODOS=$(echo "$TODOS" | sed -E 's/^\.\/[^:]*://')
          echo "Todos found: $TODOS"
          # Speichert die Todos als Umgebungsvariable
          echo "todos=$TODOS" >> $GITHUB_OUTPUT

      - name: Create Jira tickets from TODOs
        # Nur ausführen, wenn TODOs gefunden wurden
        if: steps.find_todos.outputs.todos != ''
        env:
          JIRA_USER: ${{ secrets.JIRA_API_USER }}
          JIRA_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_URL: ${{ secrets.JIRA_BASE_URL }}
        run: |
          # Teilt die Todos in einzelne Zeilen auf
          IFS=$'\n'
          # Geht jede gefundene TODO-Zeile durch
          for TODO in ${{ steps.find_todos.outputs.todos }}; do
            # Extrahiert den TODO-Text und entfernt "TODO:"
            TODO_TEXT=$(echo "$TODO" | sed 's/^.*TODO://' | sed 's/%20/ /g' | xargs)
          
            # Stellt sicher, dass der Titel nicht zu lang ist
            TITLE=$(echo "$TODO_TEXT" | cut -c 1-255)

            # API-Call an Jira, um ein neues Ticket zu erstellen
            curl --request POST \
              --url "$JIRA_URL/rest/api/2/issue" \
              --user "$JIRA_USER:$JIRA_TOKEN" \
              --header 'Accept: application/json' \
              --header 'Content-Type: application/json' \
              --data '{
                "fields": {
                  "project": {
                    "key": "SPEECHPLAN" # Ersetze dies durch deinen Projekt-Key (z. B. "PROJ")
                  },
                  "summary": "'"$TITLE"'",
                  "description": "Automatisch aus Code-Kommentar erstellter Task: '"$TODO_TEXT"'",
                  "issuetype": {
                    "name": "Task" # Kann auch "Story" oder ein anderer Ticket-Typ sein
                  }
                }
              }'
          done
